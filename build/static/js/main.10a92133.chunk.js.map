{"version":3,"sources":["components/Button.js","components/Main.js","components/Progressbar.js","components/CheckBox.js","components/Example.js","components/Test.js","components/Finish.js","components/Result.js","App.js","index.js"],"names":["Button","props","console","log","nextpage","prevpage","buttonname","name","nextbutton","type","onClick","className","classname","text","Main","useState","setName","gender","setGender","getGender","event","target","value","style","marginTop","onChange","to","changeuser","Progressbar","percent","width","CheckBox","title01","value01","answerscore01","answer01","title02","value02","answerscore02","answer02","checked","handleChecked","updateResult","select","cb","rb","title","Example","setChecked","Test","result","setResult","page","Math","ceil","length","pagenumber","setPageNumber","currentradio","slice","floor","a","axios","get","response","res","data","RESULT","error","useEffect","asyncCall","total","setTotal","handleUpdate","update","cur","newcur","questions","map","item","index","String","Object","keys","resultlist","Finish","username","maxvalue","minvalue","join","Result","usergender","objectvalue","today","Date","dateString","getFullYear","getMonth","getDate","borderBottom","height","margin","color","App","setUserName","setUserGender","setObjectValue","setMaxValue","setMinValue","path","element","ob","sorted_object","ob_list","i","push","sort","b","objectSort","string_object","ob_string","objectString","method","url","then","url_seq","split","score","wonScore","score_object","score_value","forEach","num","Number","score_object_key","score_object_value","values","max","min","catch","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.10a92133.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../css/Button.css\";\r\n\r\n// 버튼\r\n\r\nexport function Button(props) {\r\n  console.log(\"Button 컴포넌트가 렌더링 됐습니다.\");\r\n    \r\n  const nextpage = props.nextpage;\r\n  const prevpage = props.prevpage;\r\n  const buttonname = props.name;\r\n  const nextbutton = props.nextbutton;\r\n\r\n  function handleClick() {\r\n    if (buttonname === \"main\") {\r\n      console.log(\"검사시작 버튼을 클릭했습니다\");\r\n      nextbutton();\r\n    } else if (buttonname === \"next\") {\r\n      nextpage();\r\n      console.log(\"다음 버튼을 클릭했습니다\");\r\n    } else if (buttonname === \"prev\") {\r\n      prevpage();\r\n      console.log(\"이전 버튼을 클릭했습니다\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <button type=\"button\" onClick={handleClick} name={props.name} \r\n      className={props.classname}>{props.text}</button>\r\n  );\r\n}","import React, { useState, } from \"react\";\r\nimport { Button } from './Button';\r\nimport \"../css/Main.css\";\r\nimport {\r\n  Link, \r\n} from 'react-router-dom';\r\n\r\n// 검사 시작 페이지\r\n\r\nexport function Main(props) {\r\n  console.log(\"Main 컴포넌트가 렌더링 됐습니다.\");\r\n\r\n  // 이름과 성별 state\r\n  const [name, setName] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n\r\n  // input에 들어온 이름으로 바꾸는 함수\r\n  function handleChange(event) {\r\n    setName(event.target.value);\r\n    console.log(\"이름 바꿨당\");\r\n  }\r\n\r\n  function getGender(event) {\r\n    setGender(event.target.value);\r\n    console.log(\"성별 바꿨당\");\r\n  }\r\n\r\n  function handleNext() {\r\n    if (name && gender) {\r\n      props.changeuser(name, gender);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={{marginTop:\"15%\"}}>\r\n      <div className=\"title\">\r\n        <h1>직업가치관검사</h1>\r\n      </div>\r\n      <div className=\"name\">\r\n        <p>이름</p>\r\n        <input type=\"text\" onChange={handleChange} />\r\n      </div>\r\n      <div className=\"gender\">\r\n        <p>성별</p>\r\n        <label>\r\n          <div><input type=\"radio\" name=\"radio\" value=\"male\" onClick={getGender} />남자</div>\r\n        </label>\r\n        <label>\r\n          <div><input type=\"radio\" name=\"radio\" value=\"female\" onClick={getGender} />여자</div>\r\n        </label>\r\n      </div>\r\n      <div className=\"buttonContainer\">\r\n        <Link to={name && gender ? \"/example\" : \"/\"}>\r\n          <Button \r\n            classname={name && gender ? \"btn_click\" : \"btn\"} \r\n            text=\"검사시작\"\r\n            name=\"main\" \r\n            nextbutton={handleNext} />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// 검사 시작 버튼은 이름과 성별이 true 일 때 활성화","import React from \"react\";\r\nimport \"../css/Progressbar.css\";\r\n\r\nexport function Progressbar(props) {\r\n  console.log(\"Progressbar 컴포넌트가 렌더링 됐습니다.\");\r\n\r\n  return (\r\n  <div className=\"gauge\">\r\n    <div className=\"percent\">\r\n      <h2>{props.text}</h2>\r\n      <h2>{props.percent}%</h2>\r\n    </div>\r\n    <div className=\"progressbar_before\" style={{width:props.percent+\"%\"}}></div>\r\n    <div className=\"progressbar\"></div>\r\n  </div>);\r\n  }\r\n","import React from \"react\";\r\nimport \"../css/CheckBox.css\";\r\n\r\nexport function CheckBox(props) {\r\n  console.log(\"CheckBox 컴포넌트가 렌더링 됐습니다.\");\r\n\r\n  // 항목 1에 대한 정보\r\n  const title01 = props.value01;\r\n  const value01 = props.answerscore01;\r\n  const answer01 = props.answer01;\r\n\r\n  // 항목 2에 대한 정보\r\n  const title02 = props.value02;\r\n  const value02 = props.answerscore02;\r\n  const answer02 = props.answer02;\r\n\r\n  // 공통 정보\r\n  const name = props.name;\r\n  const checked = props.checked;\r\n\r\n  console.log(\"checked는\", checked);\r\n\r\n  // useCallback(함수, [변경 인지할 값])\r\n  function handleChecked(event) {\r\n    console.log(\"선택한 항목이 바뀌었습니다!\");\r\n    props.updateResult({\r\n      name: event.target.name,\r\n      select: event.target.value});\r\n  }\r\n\r\n  return (\r\n    <div className=\"checkbox\" style={props.cb}>\r\n      <p>두 개 가치 중에 자신에게 더 중요한 가치를 선택하세요.</p>\r\n      <div className=\"radiobox\" style={props.rb}>\r\n        <label title={title01}>\r\n          <div><input type=\"radio\" \r\n          name={name} \r\n          value={value01}\r\n          onClick={handleChecked} \r\n          checked={checked === value01 ? \"checked\" : null} \r\n          /><span>{answer01}</span> : {title01}</div>\r\n        </label>\r\n        <label title={title02}>\r\n          <div><input type=\"radio\" \r\n          name={name} \r\n          value={value02} \r\n          onClick={handleChecked} \r\n          checked={checked === value02 ? \"checked\" : null}\r\n          /><span>{answer02}</span> : {title02}</div>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, \r\n{ useState, } from \"react\";\r\nimport { Button } from './Button';\r\nimport { Progressbar } from './Progressbar';\r\nimport { CheckBox } from \"./CheckBox\";\r\nimport \"../css/Example.css\";\r\nimport {\r\n  Link, \r\n} from 'react-router-dom';\r\n\r\n// 검사 예시 페이지\r\n\r\nexport function Example() {\r\n  console.log(\"Example 컴포넌트가 렌더링 됐습니다.\");\r\n\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  function handleChecked() {\r\n    console.log(\"검사시작 버튼이 이제 활성화된다!!\");\r\n    setChecked(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={{marginTop:\"10%\"}}>\r\n      <Progressbar text=\"검사예시\" percent=\"0\" />\r\n      <div className=\"explanation\">\r\n        <p>직업과 관련된 두개의 가치 중에서 자기에게 더 중요한 가치에 표시하세요.</p>\r\n        <p>가치의 뜻을 잘 모르겠다면 문항에 마우스 커서를 올려서 설명을 확인해보세요.</p>\r\n      </div>\r\n      <CheckBox updateResult={handleChecked} \r\n        name=\"ex\" \r\n        answer01=\"능력발휘\" \r\n        answer02=\"자율성\" \r\n        value01=\"직업을 통해 자신의 능력을 발휘하는 것입니다.\" \r\n        value02=\"일하는 시간과 방식에 대해서 스스로 결정할 수 있는 것입니다.\" \r\n        answerscore01={-1} \r\n        checked=\"\" \r\n      />\r\n      <div className=\"buttonContainer\">\r\n        <Link to={checked ? \"/test/0\" : \"/example\"}>\r\n          <Button classname={checked ? \"btn_click\" : \"btn\"} \r\n          text=\"검사시작\" name=\"example\" />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { \r\n  useState, \r\n  useEffect, } from \"react\";\r\nimport { CheckBox } from \"./CheckBox\";\r\nimport { Button } from './Button';\r\nimport { Progressbar } from './Progressbar';\r\nimport \"../css/Test.css\";\r\nimport axios from 'axios';\r\nimport {\r\n  Link, \r\n} from 'react-router-dom';\r\n\r\nexport function Test(props) {\r\n  console.log(\"Test 컴포넌트가 렌더링 됐습니다.\");\r\n\r\n  // 페이지 관련 변수\r\n  const [result, setResult] = useState([]);\r\n  const page = Math.ceil(result.length / 5);\r\n  const [pagenumber, setPageNumber] = useState(0);\r\n  const currentradio = result.slice(pagenumber*5, (pagenumber+1)*5)\r\n  const percent = Math.floor((pagenumber+1)/page*100)\r\n\r\n  // 호출한 API 상태 관리하는 변수\r\n  async function asyncCall() {\r\n    try {\r\n      const response = await axios.get('https://inspct.career.go.kr/openapi/test/questions?apikey=fbc9e4d5e474e6e35b5de6d43988d70d&q=6');\r\n      const res = response.data.RESULT;\r\n      setResult([...res]);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  // API 호출(한번만)\r\n  useEffect(() => asyncCall(), []);\r\n\r\n  // 반응 후크 사용 효과는 '결과'가 누락된 종속성을 가지고 있습니다. 종속 배열을 포함하거나 제거합니다. 'setCurrentRadio'의 현재 값이 '결과' 반응 후크/철저한 deps의 현재 값이 필요한 경우 여러 사용상태 변수를 사용감소로 대체할 수도 있습니다.\r\n\r\n  console.log(\"현재 Test 컴포넌트에서 pagenumber는 \",pagenumber);\r\n\r\n    // 선택한 항목 값을 모아주는 변수, 함수\r\n    const [total, setTotal] = useState({});\r\n\r\n    function handleUpdate(update) {\r\n      setTotal((cur) => {\r\n          const newcur = {...cur}\r\n          const name = update.name;\r\n          const select = update.select;\r\n          newcur[name] = select;\r\n          return newcur;\r\n      })\r\n    }\r\n  \r\n    console.log(\"현재 선택한 항목은\", total);\r\n\r\n  // CheckBox 컴포넌트 5개를 만들어낼 map 함수\r\n  const questions = checkmap(currentradio);\r\n\r\n  function checkmap(Array) {\r\n    const data = Array.map((item, index) => {\r\n      const name = \"B\" + String(index+(pagenumber*5)+1);\r\n\r\n      const checked = total[name];\r\n      console.log(\"checked는\", checked);\r\n\r\n      return (\r\n        <CheckBox \r\n          key={index}\r\n          name={name}\r\n          answer01={item[\"answer01\"]} \r\n          answer02={item[\"answer02\"]} \r\n          answerscore01={item[\"answerScore01\"]} \r\n          answerscore02={item[\"answerScore02\"]} \r\n          value01={item[\"answer03\"]} \r\n          value02={item[\"answer04\"]} \r\n          updateResult={handleUpdate} \r\n          checked={checked && checked}\r\n           />\r\n      )\r\n    })\r\n    return data;\r\n  }\r\n\r\n  function nextPage() {\r\n    console.log(\"다음 페이지로 이동합니다\");\r\n    if (pagenumber !== 5) {setPageNumber(pagenumber+1);}\r\n      else {\r\n        setPageNumber(pagenumber);\r\n        props.resultlist(total);\r\n      }\r\n  }\r\n\r\n  function prevPage() {\r\n    console.log(\"이전 페이지로 이동합니다\");\r\n    if (pagenumber !== 0) {setPageNumber(pagenumber-1);}\r\n      else {setPageNumber(0);}\r\n  }\r\n\r\n  if (Object.keys(total).length === ((pagenumber+1)*5)) {\r\n    console.log(\"5개의 항목을 모두 선택했습니다!!!!!!!! 굿\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Progressbar text=\"검사진행\" percent={percent} />\r\n      { questions }\r\n      <div className=\"buttonbox\">\r\n        <Link to={pagenumber !== 0 ? \"/test/\"+String(pagenumber-1) : \"/Example/\"}>\r\n          <Button classname=\"btn\" text=\"이전\" prevpage={prevPage} name=\"prev\"  />\r\n        </Link>\r\n        <Link to={pagenumber !== 5 ? \"/test/\"+String(pagenumber+1) : \"/Finish/\"}>\r\n          <Button classname=\"btn\" text=\"다음\" nextpage={nextPage} name=\"next\"  />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport \"../css/Finish.css\";\r\nimport { Button } from './Button';\r\nimport {\r\n  Link,\r\n} from 'react-router-dom';\r\n\r\n// 검사 예시 페이지\r\n\r\nexport function Finish(props) {\r\n  console.log(\"Finish 컴포넌트가 렌더링 됐습니다.\");\r\n\r\n  const username = props.username;\r\n  let maxvalue = props.maxvalue;\r\n  let minvalue = props.minvalue;\r\n\r\n  console.log(\"username은\", username);\r\n  console.log(\"maxvalue는\", maxvalue);\r\n  console.log(\"minvalue는\", minvalue);\r\n\r\n  if (maxvalue && maxvalue.length >= 2) {\r\n    maxvalue = maxvalue.join('와(과)');\r\n  } else if (minvalue && minvalue.length >= 2) {\r\n    minvalue = minvalue.join('와(과)');\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={{marginTop:\"20%\"}}>\r\n        <h2>검사가 완료되었습니다.</h2>\r\n      <div className=\"explanation\">\r\n        <p>검사결과는 여러분이 직업을 선택할 때 상대적으로 어떠한 가치를 중요하게 생각하는지를 알려주고,</p>\r\n        <p>중요 가치를 충족시켜줄 수 있는 직업에 대해 생각해 볼 기회를 제공합니다.</p>\r\n        <br />\r\n        <br />\r\n        <p>검사 결과 {username}님은 상대적으로 {maxvalue}를(을) 중요하다고 생각하며,</p>\r\n        <p>{minvalue}를(을) 덜 중요하게 생각한다고 나왔습니다.</p>\r\n      </div>\r\n      <div className=\"buttonContainer\">\r\n        <Link to=\"/result\">\r\n          <Button classname=\"btn\" text=\"결과 보기\" />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport \"../css/Result.css\";\r\nimport { Button } from './Button';\r\nimport {\r\n  Link,\r\n} from 'react-router-dom';\r\n\r\nexport function Result(props) {\r\n  console.log(\"Result 컴포넌트가 렌더링 됐습니다.\");\r\n\r\n  const username = props.username;\r\n  const usergender = props.usergender;\r\n  const objectvalue = props.objectvalue;\r\n\r\n  console.log(\"objectvalue는\", objectvalue);\r\n\r\n  // 날짜 구하기\r\n  var today = new Date();\r\n\r\n  var year = today.getFullYear();\r\n  var month = ('0' + (today.getMonth() + 1)).slice(-2);\r\n  var day = ('0' + today.getDate()).slice(-2);\r\n\r\n  var dateString = year + '.' + month  + '.' + day;\r\n\r\n  return (\r\n    <div className=\"container\" style={{marginTop:\"5%\"}}>\r\n        <h2 style={{\r\n            borderBottom:\"2px solid gray\",\r\n            width: 300,\r\n            height: 20,\r\n            margin: \"auto\",\r\n            color: \"black\",\r\n            }}>직업가치관검사 결과표</h2>\r\n      <div className=\"explanation\">\r\n        <p>검사결과는 여러분이 직업을 선택할 때 상대적으로 어떠한 가치를 중요하게 생각하는지를 알려주고,</p>\r\n        <p>중요 가치를 충족시켜줄 수 있는 직업에 대해 생각해 볼 기회를 제공합니다.</p>\r\n      </div>\r\n      <div className=\"usertable\">\r\n        <div>이름</div>\r\n        <div>성별</div>\r\n        <div>검사일</div>\r\n        <div>{username}</div>\r\n        <div>{usergender}</div>\r\n        <div>{dateString}</div>\r\n      </div>\r\n      <p className=\"graphtitle\">직업가치관결과</p>\r\n      <div className=\"graph\">\r\n          <div><span>능력<br/>발휘</span></div>\r\n          <div><span>자율성</span></div>\r\n          <div><span>보수</span></div>\r\n          <div><span>안정성</span></div>\r\n          <div><span>사회적<br/>인정</span></div>\r\n          <div><span>사회<br/>봉사</span></div>\r\n          <div><span>자기<br/>계발</span></div>\r\n          <div><span>창의성</span></div>\r\n      </div>\r\n      <div className=\"buttonContainer\">\r\n        <Link to=\"/example\">\r\n          <Button text=\"결과 보기\" classname=\"btn\" />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState, } from \"react\";\r\nimport { Main } from './components/Main';\r\nimport { Example } from './components/Example';\r\nimport { Test } from './components/Test';\r\nimport { Finish } from './components/Finish';\r\nimport { Result } from './components/Result';\r\nimport axios from 'axios';\r\nimport {\r\n  Route,\r\n  Routes,\r\n} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  console.log(\"App 컴포넌트가 렌더링 됐습니다.\");\r\n\r\n  const [username, setUserName] = useState(\"\");\r\n  const [usergender, setUserGender] = useState(\"\");\r\n  const [objectvalue, setObjectValue] = useState([]);\r\n\r\n  // 이름과 성별 바꾸는 함수\r\n  function changeUser(name, gender) {\r\n    setUserName(name);\r\n    setUserGender(gender);\r\n    console.log(\"App 컴포넌트에서 이름과 성별 바뀜\");\r\n    console.log(\"이름은\", username);\r\n    console.log(\"성별은\", usergender);\r\n  }\r\n\r\n  // 결과값 받아오면서 생긴 변수들\r\n  const [maxvalue, setMaxValue] = useState([]);\r\n  const [minvalue, setMinValue] = useState([]);\r\n\r\n  // 객체를 value 기준으로 오름차순 정렬해서 배열로 반환하는 함수\r\n  // 반환 값 [['B1', '1'], ['B2', '2'], ['B3', '3'], ...]\r\n  function objectSort(ob) {\r\n    let ob_list = [];\r\n    for (var i in ob) {\r\n      ob_list.push([i, ob[i]]);\r\n    }\r\n    ob_list = ob_list.sort((a, b) => {\r\n      return a[1] - b[1]\r\n    })\r\n    return ob_list;\r\n  }\r\n\r\n  // 배열을 string으로 반환하는 함수\r\n  // 반환 값 \"B1=1 B2=3 B3=6...\"\r\n  function objectString(ob) {\r\n    let ob_string = \"\";\r\n    for (var i in ob) {\r\n      ob_string = ob_string + `${ob[i][0]}=${ob[i][1]} `;\r\n    }\r\n    return ob_string;\r\n  }\r\n\r\n  // 가공한 결과 값을 활용해서 POST 요청하는 함수\r\n  const resultList = (ob) => {\r\n    const sorted_object = objectSort(ob);\r\n    console.log(\"전체 항목을 정렬했습니다\", sorted_object);\r\n    const string_object = objectString(sorted_object);\r\n    console.log(\"전체 항목을 문자로 바꿨습니다\", string_object);\r\n\r\n    // Post 요청\r\n    axios({\r\n      method: \"post\",\r\n      url: \"https://inspct.career.go.kr/openapi/test/report\",\r\n      data: {\r\n        \"apikey\": \"fbc9e4d5e474e6e35b5de6d43988d70d\",\r\n        \"qestrnSeq\": \"6\",\r\n        \"trgetSe\": \"100209\",\r\n        \"name\": username,\r\n        \"gender\": `${usergender === \"female\" ? \"100324\" : \"100323\"}`,\r\n        \"grade\": \"\",\r\n        \"startDtm\": 1550466291034,\r\n        \"answers\": string_object\r\n      },\r\n       }).then((response) => {\r\n          console.log(\"response.data 입니다\", response.data.RESULT.url);\r\n\r\n          const url = response.data.RESULT.url;\r\n          console.log(\"이것은 추출한 data\", url);\r\n\r\n          const url_seq = url.split('=')[1];\r\n          console.log(\"이것은 추출한 url_seq\", url_seq);\r\n\r\n          // Get 요청\r\n          axios.get(`https://www.career.go.kr/inspct/api/psycho/report?seq=${url_seq}`)\r\n          .then((response) => {\r\n            console.log(\"이것은 결과값을 get한 데이터입니다\", response.data);\r\n\r\n            const score = response.data.result.wonScore;\r\n            console.log(\"이것은 score입니다\", score);\r\n\r\n            // 받아온 결과 값(score) 가공 : 상대적으로 중요시 하는 가치와 덜 중요한 가치 뽑기\r\n            const score_value = [\"능력발휘\", \"자율성\", \"보수\", \"안정성\", \"사회적 안정\", \"사회봉사\", \"자기계발\", \"창의성\"]\r\n            const score_list = score.split(' ');\r\n            let score_object;\r\n            score_list.forEach((num, index)=>{\r\n              const data = num.split('=');\r\n              score_object = {...score_object, [score_value[index]] : Number(data[1])};\r\n              console.log(\"가공된 데이터는\", score_object);\r\n            })\r\n            \r\n            console.log(\"가공된 데이터는\", score_object);\r\n\r\n            const score_object_key = Object.keys(score_object).slice(0,-1); // 끝에 undefined 없애기\r\n            const score_object_value = Object.values(score_object).slice(0,-1); // 끝에 null 없애기\r\n            setObjectValue([...score_object_value]);\r\n\r\n            const max = Math.max(...score_object_value);\r\n            const min = Math.min(...score_object_value);\r\n\r\n            console.log(\"key는\", score_object_key);\r\n            console.log(\"value는\", score_object_value);\r\n            console.log(\"max는\", max);\r\n            console.log(\"min은\", min);\r\n\r\n            for (var i in score_object_value) {\r\n              if (score_object_value[i] === min) {\r\n                setMinValue([...minvalue, score_object_key[i]]);\r\n              } else if (score_object_value[i] === max) {\r\n                setMaxValue([...maxvalue, score_object_key[i]]);\r\n              }\r\n            }\r\n\r\n            console.log(\"max_value는\", maxvalue);\r\n            console.log(\"min_value\", minvalue);\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.log(error, \"GET 에러입니다 ㅡㅡ\");\r\n          })\r\n      }).catch((error) => {\r\n        console.log(error, \"POST 에러입니다 ㅡㅡ\");\r\n      });\r\n  }    \r\n  \r\n/* POST로 받은 URL에서 데이터 추출\r\naxios.get('https://www.career.go.kr/inspct/api/psycho/report?seq=NTU3MzEwMTk')\r\n.then((response) => {\r\n  console.log(\"이것은 결과값을 get한 데이터입니다\", response.data);\r\n})\r\n.catch((error) => {\r\n  console.log(error);\r\n})\r\n*/\r\n  \r\n  return (\r\n    <>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Main changeuser={changeUser} />} />\r\n        <Route path=\"/example\" element={<Example />} />\r\n        <Route path={\"/test/:id\"} element={<Test resultlist={resultList} />} />\r\n        <Route path=\"/finish\" element={<Finish \r\n          username={username} \r\n          maxvalue={maxvalue}\r\n          minvalue={minvalue}\r\n           />} />\r\n        <Route path=\"/result\" element={<Result />} \r\n          username={username} \r\n          usergender={usergender}\r\n          objectvalue={objectvalue} />\r\n      </Routes>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {\r\n  BrowserRouter,\r\n} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}